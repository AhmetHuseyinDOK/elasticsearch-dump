#!/usr/bin/env node

const { argv } = require('optimist')
const path = require('path')
const fs = require('fs')
const Elasticdump = require(path.join(__dirname, '..', 'elasticdump.js'))
const packageData = require(path.join(__dirname, '..', 'package.json'))
const isUrl = require(path.join(__dirname, '..', 'lib', 'is-url.js'))
const ArgParser = require(path.join(__dirname, '..', 'lib', 'argv.js'))
const defaults = require(path.join(__dirname, '..', '..', 'defaults.js'))
const options = {}

const args = new ArgParser({ options, parseJSONOpts: true })
args.parse(argv, defaults)

if (argv.help === true) {
  let helpText = require('fs').readFileSync(path.join(__dirname, '..', 'lib', 'help.txt'))
  helpText = helpText.toString()
  helpText = helpText.replace('%%version%%', packageData.version)
  console.log(helpText)
} else if (argv.version === true) {
  console.log(packageData.version)
} else {
  if (!options.overwrite && options.output !== '$' && !isUrl(options.output) && fs.existsSync(options.output)) {
    console.error(`File \`${options.output}\` already exists, quitting`)
    process.exit(1)
  }

  const dumper = new Elasticdump(options.input, options.output, options)

  dumper.on('log', function (message) { args.log('log', message) })
  dumper.on('debug', function (message) { args.log('debug', message) })
  dumper.on('error', function (error) { args.log('error', `Error Emitted => ${error.message || JSON.stringify(error)}`) })

  dumper.dump(function (error) {
    if (error) {
      process.exit(1)
    }
  })
}
